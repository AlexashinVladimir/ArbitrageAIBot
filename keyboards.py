from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton

# –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìö –ö—É—Ä—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")],
        [KeyboardButton(text="‚ÑπÔ∏è –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –ò–ò")]
    ],
    resize_keyboard=True
)

# –∞–¥–º–∏–Ω ‚Äî –ø—Ä–æ—Å—Ç–æ–µ reply –º–µ–Ω—é (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
admin_kb = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="/list_categories"), KeyboardButton(text="/list_all_courses")],
        [KeyboardButton(text="/add_category"), KeyboardButton(text="/add_course")]
    ],
    resize_keyboard=True
)

def categories_inline(categories: list):
    """
    categories: list of tuples (id, name, is_active)
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for c in categories:
        cid, name, is_active = c
        label = f"üìÇ {name} {'(–∞–∫—Ç–∏–≤–Ω–∞)' if is_active else '(—Å–∫—Ä—ã—Ç–∞)'}"
        keyboard.inline_keyboard.append([InlineKeyboardButton(text=label, callback_data=f"cat:{cid}")])
    return keyboard

def courses_inline(courses: list):
    """
    courses: list of tuples (id, title, description, price, link, is_active)
    """
    keyboard = InlineKeyboardMarkup(inline_keyboard=[])
    for c in courses:
        cid = c[0]
        title = c[1]
        price = c[3]
        keyboard.inline_keyboard.append([InlineKeyboardButton(text=f"‚ÑπÔ∏è {title} ‚Äî {price}‚ÇΩ", callback_data=f"details:{cid}")])
    return keyboard

def course_details_keyboard(course_id: int, price: int):
    kb = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=f"‚úÖ –û–ø–ª–∞—Ç–∏—Ç—å {price}‚ÇΩ", callback_data=f"buy:{course_id}")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="back_to_categories")]
    ])
    return kb
